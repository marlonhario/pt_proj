export const DesignInitialState = {
  toggleMarket: true,
  toggleBackTestResult: false,
  marketData: {
    symbol: "",
    name: "",
    exchange: "",
    id: 0,
    interval: { label: "", value: "" },
    number_data_records: 0,
    first_data: "",
    last_data: "",
    spread: 0,
  },
  longEntryList: [],
  longExitList: [],
  shortEntryList: [],
  shortExitList: [],
  backmarketData: [
    {
      id: 1,
      name: "Net Profit",
      value: `0`,
      visible: true,
      index: 0,
      targetValue: 5000,
      setting: "GREATER",
      accessor: "netProfit",
    },
    {
      id: 2,
      name: "Profit per day",
      value: "0",
      visible: true,
      index: 1,
      targetValue: 20,
      setting: "GREATER",
      accessor: "profitPerDay",
    },
    {
      id: 3,
      name: "Max drawdown",
      value: "0",
      visible: true,
      index: 2,
      targetValue: 500,
      setting: "LESSER",
      accessor: "maxDrawDown",
    },
    {
      id: 4,
      name: "Return / drawdown",
      value: "0",
      visible: true,
      index: 3,
      targetValue: 2,
      setting: "GREATER",
      accessor: "drawdown",
    },
    {
      id: 5,
      name: "Count of trades",
      value: "0",
      visible: true,
      index: 4,
      targetValue: 4000,
      setting: "LESSER",
      accessor: "tradeCount",
    },
  ],
  stockData: {},
  strategyProperties: {
    entryLots: 10000,
    stopLoss: "Not used",
    lossPips: 100,
    takeProfit: "Not used",
    profitPips: 100,
  },
  strategyId: null,
  storageMarketList: [],
  exit: true,
  loading: false,
  loadingInterval: false,
  selectedIndicatorData: {},
  isLongEntryRules: false,
  selectedIndicator: { label: "Awesome Oscillator", value: "AwesomeOscillator.json" },
  indicatorName: "Indicator Name",
  signal: [],
  properties: [],
  formProperty: {},
  identification: '',
  selectedSignal: {},
  isStrategyOpen: false,
  computation: {},
  balance_chart: []
}

export interface genValue {
  label: string
  value: string
}

export interface designState {
  toggleMarket: boolean
  toggleBackTestResult: boolean
  marketData: {
    symbol: string,
    name: string,
    exchange: string,
    id: number,
    interval: genValue,
    number_data_records: number,
    first_data: string,
    last_data: string,
    spread: number,
  },
  longEntryList: any,
  longExitList: any,
  shortEntryList: any,
  shortExitList: any,
  backmarketData: any,
  stockData: any,
  strategyProperties: any,
  strategyId: null | string,
  storageMarketList: any,
  exit: boolean,
  loading: boolean,
  loadingInterval: boolean,
  selectedIndicatorData: any,
  isLongEntryRules: boolean,
  selectedIndicator: genValue,
  indicatorName: string,
  signal: any,
  properties: any,
  formProperty: any,
  identification: string,
  selectedSignal: any,
  isStrategyOpen: boolean,
  computation: any,
  balance_chart: any
}